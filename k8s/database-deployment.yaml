apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\ruzan\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert -o .\k8s\
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: database
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\ruzan\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert -o .\k8s\
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: database
    spec:
      containers:
        - env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_SERVER
            - name: HANGFIRE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: HANGFIRE_PASSWORD
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SA_PASSWORD
            - name: SA_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SA_USER
          image: coldezzt/net-litres-database
          name: litres-database
          resources:
            limits:
              memory: "2Gi"
              cpu: "500m"
          ports:
            - containerPort: 1433
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/src/app/init-db.sh
              name: database-cm0
              subPath: init-db.sh
            - mountPath: /usr/src/app/create-databases.sql
              name: database-cm1
              subPath: create-databases.sql
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: init-db.sh
                path: init-db.sh
            name: database-cm0
          name: database-cm0
        - configMap:
            items:
              - key: create-databases.sql
                path: create-databases.sql
            name: database-cm1
          name: database-cm1
