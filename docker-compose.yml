version: "3.8"

services:
  database:
    image: coldezzt/net-litres-database
    container_name: litres_database
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      - ACCEPT_EULA=Y
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - SA_USER=${SA_USER}
      - SA_PASSWORD=${SA_PASSWORD}
      - HANGFIRE_PASSWORD=${HANGFIRE_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - ./database/init-db.sh:/usr/src/app/init-db.sh
      - ./database/create-databases.sql:/usr/src/app/create-databases.sql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "${DB_SERVER}", "-U", "${SA_USER}", "-P", "${SA_PASSWORD}", "-d", "${DB_NAME}", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:latest
    container_name: litres_redis
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: litres_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  migrate:
    image: coldezzt/net-litres-migrate
    container_name: litres_migrate
    build:
      context: ./backend
      dockerfile: ./Litres.Infrastructure/Dockerfile
    environment:
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - SA_USER=${SA_USER}
      - SA_PASSWORD=${SA_PASSWORD}
      - HANGFIRE_PASSWORD=${HANGFIRE_PASSWORD}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - HANGFIRE_CONNECTION_STRING=${HANGFIRE_CONNECTION_STRING}
      - TEST_DB_CONNECTION_STRING=${TEST_DB_CONNECTION_STRING}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
    depends_on:
      database:
        condition: service_healthy    

  payment:
    image: coldezzt/net-litres-payment
    container_name: litres_payment
    build:
      context: ./backend/Litres.Payment
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - database

  server:
    image: coldezzt/net-litres-server
    container_name: litres_server
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - SA_USER=${SA_USER}
      - SA_PASSWORD=${SA_PASSWORD}
      - HANGFIRE_PASSWORD=${HANGFIRE_PASSWORD}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - HANGFIRE_CONNECTION_STRING=${HANGFIRE_CONNECTION_STRING}
      - TEST_DB_CONNECTION_STRING=${TEST_DB_CONNECTION_STRING}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
    ports:
      - "5271:8080"
    depends_on:
      - migrate
      - minio
      - redis
    restart: "no"

  frontend:
    image: coldezzt/net-litres-frontend
    container_name: litres_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:8081"
    depends_on:
      - server

volumes:
  minio-data: